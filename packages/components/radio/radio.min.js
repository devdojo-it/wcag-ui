import{componentDecorator as t,events as i}from"@wcag-ui/core";import{DOM as a}from"@wcag-ui/dom";var e={"aria-label":function(t,a){this.label&&this.label.textContent!==a&&(this.label.childNodes[0].textContent=a,i.dispatchComponentEvent.call(this,"aria-label.change",{label:a}))}},l={input:function(t){console.log("radio emitted input",this.ariaLabel),i.dispatchComponentEvent.call(this,"input",{value:this.value},t)},change:function(t){console.log("radio emitted change",this.ariaLabel),i.dispatchComponentEvent.call(this,"change",{value:this.value},t)},focus:function(t){console.log("radio emitted focus",this.ariaLabel),i.dispatchComponentEvent.call(this,"focus",{value:this.value},t)},blur:function(t){console.log("radio emitted blur",this.ariaLabel),i.dispatchComponentEvent.call(this,"blur",{value:this.value},t)},invalid:function(t){console.log("radio emitted invalid",this.ariaLabel),i.dispatchComponentEvent.call(this,"invalid",{value:this.value},t)}},n=class i extends HTMLInputElement{static name="wcag-radio";static extends="input";static attributes=e;static events=l;static{t("Radio",i)}constructor(){super(),this.#t()}#t(){this.setAttribute("type","radio");let t=a.wrapElement(this,{tag:"span"}),i=a.wrapElement(t,{tag:"label"});a.insertHTML(this.ariaLabel??"aria-label N/A",i,"prepend"),this.setAttribute("sr-only",""),this.removeAttribute("aria-label")}};export{n as Radio};