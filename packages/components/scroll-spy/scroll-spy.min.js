import{componentDecorator as e,helpers as t}from"@wcag-ui/core";import{DOM as r}from"@wcag-ui/dom";var s={target:function(e,t){}},i={};let{stripEmojis:o}=t.strings;var n=class t extends HTMLElement{static name="wcag-scroll-spy";static extends="section";static attributes=s;static events=i;static{e("ScrollSpy",t)}#e;#t;#r=[];constructor(){super()}onConnected(){let e=this.getAttribute("target"),t=document.querySelector(e);if(!t)return void console.error("Target container non trovato per ScrollSpy:",e);this.#t=t.querySelector("h1"),this.#r=[...t.querySelectorAll("h2")],this.buildNav(),this.setupObserver()}onDisconnected(){this.#e&&this.#e.disconnect()}buildNav(){let e=`
      <span>${o(this.#t.textContent)}</span>
      <nav>
        <ul>
          ${this.#r.map(e=>(e.id||(e.id=e.textContent.trim().toLowerCase().replace(/\s+/g,"-")),`<li><a href="#${e.id}">${o(e.textContent)}</a></li>`)).join("")}
        </ul>
      </nav>
    `;r.insertHTML(e,this)}setupObserver(){for(let e of(this.#e=new IntersectionObserver(e=>{for(let t of e){let e=t.target.id,r=this.querySelector(`a[href="#${e}"]`);t.isIntersecting&&(this.clearActive(),r&&r.parentElement&&r.parentElement.classList.add("active"))}},{root:null,rootMargin:"0px",threshold:.5}),this.#r))this.#e.observe(e)}clearActive(){for(let e of this.querySelectorAll("li.active"))e.classList.remove("active")}};export{n as ScrollSpy};